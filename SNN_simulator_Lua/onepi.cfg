local selfAddress = '169.254.5.208'
local piAddress = '169.254.197.218'

return
  { incoming =
    { { localAddress = selfAddress
      , localPort = 40000
      }
    }
  , outgoing = {}
  , inCollector = function(inputs)
      -- This function compiles data from the various inputs into a vector for the network
      -- A simple concat wouldn't work since it does not guarantee that the inputs
      -- are in the same order (lua tables do not guarantee any order)
      -- This config has only one input so just return it
      return inputs[piAddress]:reshape(2, inputs[piAddress]:nElement() / 2):narrow(1,1,1):narrow(2,1,120)
    end
  , outDistributor = function(inputs)
      -- Same rationale and purpose as with inCollector
      return inputs[piAddress]
    end
  , packTimeout = 10
    -- Should return nil when no data to send, otherwise a torch tensor of data
  , dataSource = function()
      return nil
    end
  , idString = selfAddress
  }
